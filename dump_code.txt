#     def update_unspent_btc_from_blockchain(self,miner):
#         for block in blockchain.blockchain:
#             self.update_unspent_btc_from_block(block)
            
#     def update_unspent_btc_from_block(self,block):
#         for tx in block.transactions:
#             txid = tx.txid
#             sender_address = bytes.fromhex(tx.sender_address)
#             for index,output in enumerate(tx.tx_out):
#                 if output.to_address == self.public_key_hash:
#                     key = txid+"-"+str(index)
#                     if key not in self.secured_unspent_btc:
#                         print("{} Received {} BTC from {}".format(str(self.id),str(output.amount),self.node_id_of_public_key[sender_address]))
#                         self.secured_unspent_btc[key] = [sender_address,output.amount,txid,index]
#                         self.btc += output.amount
#                     else:
#                         print("already received money from this transaction,",  self.id)
                        
#             if sender_address == self.public_key:
#                 for index,input in enumerate(tx.tx_in):
#                     key = input.prev_output_tid +"-"+str(input.prev_output_index)
#                     self.btc -= self.secured_unspent_btc[key]
#                     print("{} have spent {} BTC".format(str(self.id),str(self.btc)))
#                     del self.secured_unspent_btc[key]



        
        ### Block for mining #####
        # Now mining work starts
        
                
            
            
            
            
            
            
            
            
            
            
            
            #print(self.blockchain)
        #print(self.secured_unspent_btc,self.btc,self.id)
        # if self.id ==0:
        #    print(self.blockchain)  
        #print("Done and return," , self.id)
        
        ### Block for doing transaction ####
            
            
        
        ### Now each node will select a random node and will send it money 
        ### Once it does send/receive then it wont send any money to any other node for 10 seconds
        ### Further each node will engange in mining the blocks, as soon it finishes, it will send the blocks to everyone and everyone will validate the block before adding it.
        ### Once they validate, 
#         while not done:
#             try:
#                 msg = msg_qs[self.id].get(block=True,timeout=10)
#                 if msg.type == "PUBLIC_KEY":
#                     self.update_public_key_of_node(msg.src,msg.msg)
#                 if msg.type == "TRANSACTION":
#                     #### collect the transaction ###
#                 if msg.type == "BLOCK":
#                     ### add the block and verify it
                    
                
#                 #print("Received message")
#                 print("Received message  ," +str(msg))
#                 ct += 1
#             except Q.Empty:
#                 print("No new message in 5 seconds , got messages from {} exitin {}".format(str(ct),str(self.id)))
#                 #outputq.put("I am done {}".format(str(self.id)))
#                 done = True
#                 #return
        
    
                if i == 0:
                    amount += self.block_reward
                total_amount_generated += amount
                outputs.append(Output(self.public_keys_of_nodes[i].hex(),amount,self.hash_type))
                            transaction = 
                        print("Sending money to ")


    ### code to add to block chain
