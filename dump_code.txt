#     def update_unspent_btc_from_blockchain(self,miner):
#         for block in blockchain.blockchain:
#             self.update_unspent_btc_from_block(block)
            
#     def update_unspent_btc_from_block(self,block):
#         for tx in block.transactions:
#             txid = tx.txid
#             sender_address = bytes.fromhex(tx.sender_address)
#             for index,output in enumerate(tx.tx_out):
#                 if output.to_address == self.public_key_hash:
#                     key = txid+"-"+str(index)
#                     if key not in self.secured_unspent_btc:
#                         print("{} Received {} BTC from {}".format(str(self.id),str(output.amount),self.node_id_of_public_key[sender_address]))
#                         self.secured_unspent_btc[key] = [sender_address,output.amount,txid,index]
#                         self.btc += output.amount
#                     else:
#                         print("already received money from this transaction,",  self.id)
                        
#             if sender_address == self.public_key:
#                 for index,input in enumerate(tx.tx_in):
#                     key = input.prev_output_tid +"-"+str(input.prev_output_index)
#                     self.btc -= self.secured_unspent_btc[key]
#                     print("{} have spent {} BTC".format(str(self.id),str(self.btc)))
#                     del self.secured_unspent_btc[key]



        
        ### Block for mining #####
        # Now mining work starts
        
                
            
            
            
            
            
            
            
            
            
            
            
            #print(self.blockchain)
        #print(self.secured_unspent_btc,self.btc,self.id)
        # if self.id ==0:
        #    print(self.blockchain)  
        #print("Done and return," , self.id)
        
        ### Block for doing transaction ####
            
            
        
